#!/bin/sh

master_conf=master.cf
config_directory=${SNAP_DATA}/etc/postfix
sql_conf_directory=${config_directory}/sql_config
dovecot_config_dir=${SNAP_DATA}/etc/dovecot
smtpd_sasl_directory=${SNAP_DATA}/var/run/dovecot/
daemon_directory=${SNAP}/usr/libexec/postfix
data_directory=${SNAP_DATA}/var/lib/postfix
command_directory=${SNAP}/usr/sbin
queue_directory=${SNAP}/var/spool/postfix
#mail_owner=postfix
#setgid_group=postdrop
mail_owner=root
setgid_group=root
sendmail_path=${SNAP}/usr/sbin/sendmail
mailq_path=${SNAP}/usr/bin/mailq
newaliases_path=${SNAP}/usr/bin/newaliases
manpage_directory=${SNAP}/usr/local/man
sample_directory=${SNAP}/etc/postfix
meta_directory=${SNAP}/etc/postfix
smtpd_tls_cert_file=${SNAP_DATA}/etc/ssl/certs/dovecot.crt
smtpd_tls_key_file=${SNAP_DATA}/etc/ssl/private/dovecot.key
postfix_file_header_checks=${SNAP}/etc/postfix/header_checks
postfix_file_helo_access=${SNAP}/conf/postfix/helo_access.pcre
wsgi_directory=${SNAP_DATA}/var/run/wsgi/

alias_maps=${config_directory}/aliases
alias_database=${config_directory}/aliases
transport_maps_user=${sql_conf_directory}/transport_maps_user.cf
transport_maps_domain=${sql_conf_directory}/transport_maps_domain.cf
sender_dependent_relayhost_maps=${sql_conf_directory}/sender_dependent_relayhost_maps.cf
sender_login_maps=${sql_conf_directory}/sender_login_maps.cf
relay_domains=${sql_conf_directory}/relay_domains.cf
domain_alias_maps=${sql_conf_directory}/domain_alias_maps.cf
catchall_maps=${sql_conf_directory}/catchall_maps.cf
domain_alias_catchall_maps=${sql_conf_directory}/domain_alias_catchall_maps.cf
vmail_domains=${sql_conf_directory}/virtual_mailbox_domains.cf
vmail_mailbox=${sql_conf_directory}/virtual_mailbox_maps.cf
vmail_aliases=${sql_conf_directory}/virtual_alias_maps.cf
sender_bcc_maps_user=${sql_conf_directory}/sender_bcc_maps_user.cf
sender_bcc_maps_domain=${sql_conf_directory}/sender_bcc_maps_domain.cf
recipient_bcc_maps_user=${sql_conf_directory}/recipient_bcc_maps_user.cf
recipient_bcc_maps_domain=${sql_conf_directory}/recipient_bcc_maps_domain.cf
myhostname=example.com
openssl="$SNAP/usr/bin/openssl"

#no need to write into main.cf, only for lock path usage.
pid_directory=${SNAP_DATA}/pid
public_directory=${SNAP_DATA}/public
private_directory=${SNAP_DATA}/private

#force mail_conf read the config file from environment variable.
export MAIL_CONFIG=${config_directory}

#sed in-place option is not available on some distros.
modify() {
    sed -u "$1" "$2" > "$2".bak && mv "$2".bak "$2"
}

# Fix 'The Logjam Attack'. References:
#   - https://weakdh.org/
#   - https://weakdh.org/sysadmin.html
ssl_dir=${SNAP_DATA}/etc/ssl
ssl_dh512_param_file=$ssl_dir/dh512_param.pem
ssl_dh1024_param_file=$ssl_dir/dh2048_param.pem
test -d $ssl_dir || mkdir -p $ssl_dir
echo "Generate Diffie Hellman Group with openssl, please wait."
${openssl} dhparam -out ${ssl_dh512_param_file} 512 5>&1 &>/dev/null
${openssl} dhparam -out ${ssl_dh1024_param_file} 2048 5>&1 &>/dev/null

#conf files
test -d $config_directory || mkdir -p $config_directory  
test -f $config_directory/main.cf || touch $config_directory/main.cf
test -f $alias_maps || touch $alias_maps
test -f $config_directory/$master_conf || cp ${SNAP}/conf/postfix/$master_conf $config_directory/

test -d $data_directory || mkdir -p $data_directory  
test -d $pid_directory || mkdir -p $pid_directory
test -d $public_directory || mkdir -p $public_directory
test -d $private_directory || mkdir -p $private_directory
test -d $smtpd_sasl_directory || mkdir -p $smtpd_sasl_directory
test -d $wsgi_directory || mkdir -p $wsgi_directory

#waiting mysql vmailadmin's password is generated.
#That's sth that several sql tables neeeds
while [ ! -f "$SNAP_DATA/mysql/vmailadmin_password" ]; do
    sleep 1 
    echo "waiting for vmailadmin password"
done 

#replace placeholder with real vmailadmin's password  for sql table accessing.
vmailadmin_password=`cat $SNAP_DATA/mysql/vmailadmin_password`
if [ ! -d $sql_conf_directory ] ; then
    mkdir -p $sql_conf_directory
    cp -a ${SNAP}/conf/postfix/sql_config/* $sql_conf_directory/
    for file in ${sql_conf_directory}/*.cf
    do
        modify "s#vmailadminpass#${vmailadmin_password}#g" $file
    done

    for file in ${dovecot_config_dir}/* ; 
    do  
        modify "s#vmailadminpass#${vmailadmin_password}#g" $file
    done
fi

if [ -f $config_directory/main.cf ] ; then
    #hash vmail conf files
    #$command_directory/postmap -c $config_directory $vmail_aliases
    #$command_directory/postmap -c $config_directory $vmail_mailbox
    #$command_directory/postmap -c $config_directory $vmail_domains

    #re-generate postconf file
    $command_directory/postconf -c $config_directory -e \
      "daemon_directory = $daemon_directory" \
      "data_directory = $data_directory" \
      "command_directory = $command_directory" \
      "queue_directory = $queue_directory" \
      "manpage_directory = $manpage_directory" \
      "sample_directory = $sample_directory" \
      "meta_directory = $meta_directory" \
      "mail_owner = $mail_owner" \
      "alias_maps = hash:$alias_maps" \
      "alias_database = hash:$alias_database" \
      "relayhost =" \
      "unknown_local_recipient_reject_code = 550" \
      "disable_vrfy_command=yes" \
      "mailbox_size_limit = 0" \
      "recipient_delimiter = +" \
      "inet_interfaces = all" \
      "inet_protocols = all" \
      "setgid_group = $setgid_group" \
      "sendmail_path = $sendmail_path" \
      "mailq_path = $mailq_path" \
      "newaliases_path = $newaliases_path" \
      "readme_directory = no" \
      "smtpd_tls_CAfile = $smtpd_tls_cert_file" \
      "smtpd_tls_cert_file= $smtpd_tls_cert_file" \
      "smtpd_tls_key_file = $smtpd_tls_key_file" \
      "smtpd_tls_exclude_ciphers = aNULL, eNULL, EXPORT, DES, RC4, MD5, PSK, aECDH, EDH-DSS-DES-CBC3-SHA, EDH-RSA-DES-CDC3-SHA, KRB5-DE5, CBC3-SHA" \
      "smtpd_tls_dh512_param_file = $ssl_dh512_param_file" \
      "smtpd_tls_dh1024_param_file = $ssl_dh1024_param_file" \
      "tls_random_source = dev:/dev/urandom" \
      "smtp_tls_loglevel = 1 " \
      "smtpd_tls_loglevel = 1 " \
      "smtp_tls_CAfile = $smtpd_tls_cert_file"  \
      "smtpd_reject_unlisted_recipient = yes" \
      "smtpd_reject_unlisted_sender = yes" \
      "header_checks = pcre:$postfix_file_header_checks" \
      "smtp_tls_note_starttls_offer = yes" \
      "smtpd_tls_security_level = may" \
      "smtp_tls_security_level = may" \
      "smtpd_tls_auth_only = yes" \
      "smtpd_helo_required = yes" \
      "smtpd_sasl_type = dovecot" \
      "smtpd_sasl_path = private/auth" \
      "virtual_transport = dovecot" \
      "dovecot_destination_recipient_limit = 1" \
      "smtpd_sasl_auth_enable = yes" \
      "smtpd_recipient_restrictions=permit_mynetworks, permit_sasl_authenticated, reject_unauth_destination" \
      "enable_original_recipient = no" \
      "myhostname=$myhostname" \
      "myorigin = $myhostname" \
      "mydomain = $myhostname" \
      "mynetworks = 127.0.0.1" \
      "message_size_limit = 15728640" \
      "mydestination = $myhostname, localhost, localhost.localdomain" \
      "transport_maps=mysql:$transport_maps_user, mysql:$transport_maps_domain" \
      "sender_dependent_relayhost_maps=mysql:$sender_dependent_relayhost_maps" \
      "smtpd_sender_login_maps=mysql:$sender_login_maps" \
      "relay_domains=$mydestination, mysql:$relay_domains" \
      "virtual_mailbox_domains=mysql:$vmail_domains" \
      "virtual_mailbox_maps=mysql:$vmail_mailbox" \
      "virtual_alias_maps=mysql:$vmail_aliases, mysql:$domain_alias_maps, mysql:$catchall_maps, mysql:$domain_alias_catchall_maps" \
      "sender_bcc_maps=mysql:$sender_bcc_maps_domain, mysql:$sender_bcc_maps_user" \
      "recipient_bcc_maps=mysql:$recipient_bcc_maps_domain, mysql:$recipient_bcc_maps_user"
fi

sleep 1

#old simple tables
#"virtual_mailbox_domains=mysql:$vmail_domains" \
#"virtual_mailbox_maps=mysql:$vmail_mailbox" \
#"virtual_alias_maps=mysql:$vmail_aliases, mysql:$vmail_email2email"

#Run postfix in daemon mode 
postfix start

#Ensure that Postfix can find the first domain.
postmap -q example.com mysql:$vmail_domains
[ $? -eq 0 ] && echo "postmap: vmail_domain table is ready to use."

#Test Postfix to verify that it can find the first email address in the MySQL table.
postmap -q postmaster@example.com mysql:$vmail_mailbox
[ $? -eq 0 ] && echo "postmap: vmail_mailbox table is ready to use."

#Test Postfix to verify that it can find the aliases by entering the following command.
postmap -q gary@example.com mysql:$vmail_aliases
[ $? -eq 0 ] && echo "postmap: vmail_aliases table is ready to use." 

#Do not exit from the parent process to avoid postfix/master terminating on signal 15
while :
do
    sleep 5
done
